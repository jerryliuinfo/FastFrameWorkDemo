
project.archivesBaseName = PROJ_ARTIFACTID

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    //classpath += configurations.compile
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError=false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task syncJavadoc(type: Sync, dependsOn: javadoc) {
    from javadoc.destinationDir
    into rootProject.file('docs')
}

javadoc {
    options{
        ///jav doc采用utf-8编码,否则会报“GBK的不可映射字符”错误
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        title "$PROJ_POM_NAME $PROJ_VERSION"
        String packageListRef = "${android.sdkDirectory}/docs/reference/"
        linksOffline 'http://d.android.com/reference/', packageListRef
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            groupId PROJ_GROUP
            artifactId PROJ_ARTIFACTID
            version PROJ_VERSION
            packaging 'aar'
            name PROJ_POM_NAME
            url PROJ_WEBSITEURL
            description PROJ_DESCRIPTION
            inceptionYear '2016'

            licenses {
                license {
                    name PROJ_LICENCE_NAME
                    url PROJ_LICENCE_URL
                    distribution PROJ_LICENCE_DEST
                }
            }
            scm {
                connection PROJ_VCSURL
                developerConnection PROJ_VCSURL//我使用的是项目在github上生成的git地址

                url PROJ_WEBSITEURL

            }
            developers {
                developer {
                    id DEVELOPER_ID //your user id (you can write your nickname)
                    name DEVELOPER_NAME
                    email DEVELOPER_EMAIL
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {

    user = properties.getProperty("bintrayUser")
    key = properties.getProperty("bintrayKey")
    configurations = ['archives']

    dryRun = false
    publish = true

    pkg {
        repo = 'maven'
        name = PROJ_POM_NAME
        licenses = ['Apache-2.0']
        vcsUrl = PROJ_VCSURL
        websiteUrl = PROJ_WEBSITEURL
        //issueTrackerUrl = PROJ_ISSUETRACKERURL
        publicDownloadNumbers = true
        publish=true
        version {
            name = PROJ_VERSION
            desc = PROJ_DESCRIPTION
            vcsTag = PROJ_VERSION

            gpg {
                sign = true
            }
        }
    }

}

//以下内容用于发布SNAPSHOT版本，如果不需要可以移除。
//参考自：https://www.jfrog.com/confluence/display/RTF/Gradle+Artifactory+Plugin

/*
apply plugin: "com.jfrog.artifactory"
artifactory {
    contextUrl = 'http://oss.jfrog.org/artifactory' //The base Artifactory URL if not overridden by the publisher/resolver
    resolve {
        repository {
            repoKey = 'libs-release'
        }
    }
    publish {
        repository {
            repoKey = 'oss-snapshot-local' //The Artifactory repository key to publish to
            username = bintray.user
            password = bintray.key
            maven = true
        }
        defaults {
            //这里的名字和前面bintray.configurations的值一致即可，会将其包含的输出上传到jfrog上去
            publishConfigs('archives')
        }
    }
}*/



